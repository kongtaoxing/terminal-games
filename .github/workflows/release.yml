name: Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Tag name for the release (e.g. v1.0.0)'
        required: true
        type: string

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: tgame-windows-x86_64.exe
            executable: tgame.exe
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: tgame-linux-x86_64
            executable: tgame
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: tgame-macos-x86_64
            executable: tgame
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: tgame-macos-arm64
            executable: tgame
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.target }}
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: target/${{ matrix.target }}/release/${{ matrix.executable }}

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
          draft: false
          prerelease: false
      - name: Upload Windows Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/tgame-windows-x86_64.exe/tgame.exe
          asset_name: tgame-windows-x86_64.exe
          asset_content_type: application/octet-stream
      - name: Upload Linux Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/tgame-linux-x86_64/tgame
          asset_name: tgame-linux-x86_64
          asset_content_type: application/octet-stream
      - name: Upload MacOS x86_64 Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/tgame-macos-x86_64/tgame
          asset_name: tgame-macos-x86_64
          asset_content_type: application/octet-stream
      - name: Upload MacOS arm64 Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/tgame-macos-arm64/tgame
          asset_name: tgame-macos-arm64
          asset_content_type: application/octet-stream