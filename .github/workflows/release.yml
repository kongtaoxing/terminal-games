name: Release and Bump Homebrew Formula

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Tag name for the release (e.g. v1.0.0)'
        required: true
        type: string

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: tgame-windows-x86_64
            compiled_name: terminal-games.exe
            executable: tgame.exe
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: tgame-linux-x86_64
            compiled_name: terminal-games
            executable: tgame
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: tgame-macos-x86_64
            compiled_name: terminal-games
            executable: tgame
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: tgame-macos-arm64
            compiled_name: terminal-games
            executable: tgame
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.target }}
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
      - name: Verify build output
        run: |
          cp target/${{ matrix.target }}/release/${{ matrix.compiled_name }} target/${{ matrix.target }}/release/${{ matrix.executable }}
          ls -l target/${{ matrix.target }}/release/${{ matrix.executable }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: target/${{ matrix.target }}/release/${{ matrix.executable }}
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: List downloaded artifacts
        run: |
          ls -R artifacts || echo "No artifacts found"
      - name: Prepare and package artifacts
        run: |
          mkdir -p packaged-assets

          # Windows: Create .zip with renamed executable
          mkdir -p tmp-windows
          cp artifacts/tgame-windows-x86_64/tgame.exe tmp-windows/tgame.exe
          cd tmp-windows
          zip -r ../packaged-assets/tgame-windows-x86_64.zip .
          cd ..

          # Linux: Create .tar.gz with renamed executable
          mkdir -p tmp-linux
          cp artifacts/tgame-linux-x86_64/tgame tmp-linux/tgame
          tar -C tmp-linux -czf packaged-assets/tgame-linux-x86_64.tar.gz tgame

          # MacOS x86_64: Create .tar.gz with renamed executable
          mkdir -p tmp-macos-x86_64
          cp artifacts/tgame-macos-x86_64/tgame tmp-macos-x86_64/tgame
          tar -C tmp-macos-x86_64 -czf packaged-assets/tgame-macos-x86_64.tar.gz tgame

          # MacOS arm64: Create .tar.gz with renamed executable
          mkdir -p tmp-macos-arm64
          cp artifacts/tgame-macos-arm64/tgame tmp-macos-arm64/tgame
          tar -C tmp-macos-arm64 -czf packaged-assets/tgame-macos-arm64.tar.gz tgame

          ls -l packaged-assets
      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Creating draft release for ${{ github.event.inputs.version }}"
          gh release create "${{ github.event.inputs.version }}" \
            packaged-assets/tgame-windows-x86_64.zip \
            packaged-assets/tgame-linux-x86_64.tar.gz \
            packaged-assets/tgame-macos-x86_64.tar.gz \
            packaged-assets/tgame-macos-arm64.tar.gz \
            --title "Release ${{ github.event.inputs.version }}" \
            --notes "Release ${{ github.event.inputs.version }} for tgame"

  bump_formula:
    needs: release
    runs-on: macos-latest
    steps:
      - name: Bump Homebrew formula
        uses: dawidd6/action-homebrew-bump-formula@v4
        with:
          token: ${{ secrets.PAT }}
          user_name: kongtaoxing_tapbot
          user_email: kongtaoxing@gmail.com
          tap: kongtaoxing/homebrew-tap
          formula: tgame
          tag: ${{ github.event.inputs.version }}